swagger: "2.0"
info:
  title: Auto Test Case API
  version: "1.0"
  description: API for managing test projects, scenarios, test cases, and test runs
tags:
  - name: Project
    description: Project management endpoints
  - name: Document
    description: Document management endpoints
  - name: Scenario
    description: Test scenario management endpoints
  - name: Workflow
    description: Workflow management endpoints

paths:
  /api/ping:
    get:
      summary: Health check endpoint
      tags: [Project]
      operationId: controllers.ping.ping
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string

  /api/project/create:
    post:
      summary: Create a new project
      tags: [Project]
      operationId: controllers.project.create
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [name]
            properties:
              name:
                type: string
              description:
                type: string
              owner:
                type: string
              is_current:
                type: boolean
              dify_api_keys:
                type: array
                items:
                  type: object
                  required: [key]
                  properties:
                    key:
                      type: string
                      description: The Dify API key
                    mode:
                      type: string
                      enum: [cloud, self_hosted]
                      default: cloud
                      description: The mode of Dify API (cloud or self-hosted)
                description: List of Dify API configurations with key and mode.
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: "#/definitions/Project"
        "400":
          description: Bad request - missing required fields
        "500":
          description: Internal server error

  /api/projects:
    get:
      summary: List all projects (alternate endpoint)
      tags: [Project]
      operationId: controllers.project.list_all
      responses:
        "200":
          description: Success
        "500":
          description: Internal server error

  /api/project/get:
    get:
      summary: Get project details
      tags: [Project]
      operationId: controllers.project.get
      parameters:
        - name: id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
        "400":
          description: Missing project ID
        "404":
          description: Project not found
        "500":
          description: Internal server error

  /api/project/update:
    put:
      summary: Update project details
      tags: [Project]
      operationId: controllers.project.update
      parameters:
        - name: id
          in: query
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
      responses:
        "200":
          description: Success
        "400":
          description: Missing project ID or body
        "404":
          description: Project not found
        "500":
          description: Internal server error

  /api/project/delete:
    delete:
      summary: Delete a project
      tags: [Project]
      operationId: controllers.project.delete
      parameters:
        - name: id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
        "400":
          description: Missing project ID
        "404":
          description: Project not found
        "500":
          description: Internal server error

  /api/scenario/save:
    post:
      summary: Save test scenarios for a project
      tags: [Scenario]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenarios
            properties:
              project_id:
                type: string
                description: Project ID
              scenarios:
                type: array
                items:
                  $ref: "#/definitions/Scenario"
      operationId: controllers.scenario.save_scenarios
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        "400":
          description: Bad request - missing required fields
        "500":
          description: Internal server error

  /api/scenario/save_from_workflow:
    post:
      summary: Save test scenarios from workflow output
      tags: [Scenario]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - workflow_output
            properties:
              project_id:
                type: string
                description: Project ID
              workflow_output:
                type: object
                description: Raw workflow output that will be transformed to match the new data structure
      operationId: controllers.scenario.save_scenarios_from_workflow
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        "400":
          description: Bad request - missing required fields
        "500":
          description: Internal server error

  /api/scenario/create:
    post:
      summary: Create a new test scenario
      tags: [Scenario]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenario_data
            properties:
              project_id:
                type: string
                description: Project ID
              scenario_data:
                type: object
                required:
                  - name
                  - description
                  - priority
                properties:
                  name:
                    type: string
                    description: Scenario name
                  description:
                    type: string
                    description: Scenario description
                  priority:
                    type: string
                    enum: [High, Medium, Low]
                    description: Scenario priority level
                  version:
                    type: string
                    description: Scenario version (optional, defaults to '1.0')
      operationId: controllers.scenario.create_scenario
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: "#/definitions/Scenario"
        "400":
          description: Bad request - missing required fields
        "500":
          description: Internal server error

  /api/scenario/list:
    get:
      summary: Get test scenarios for a project
      tags: [Scenario]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
      operationId: controllers.scenario.get_scenarios
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Scenario"
        "400":
          description: Bad request - missing project_id
        "500":
          description: Internal server error

  /api/scenario/update:
    put:
      summary: Update a test scenario
      tags: [Scenario]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenario_id
              - scenario_data
            properties:
              project_id:
                type: string
                description: Project ID
              scenario_id:
                type: string
                description: Scenario ID
              scenario_data:
                $ref: "#/definitions/Scenario"
      operationId: controllers.scenario.update_scenario
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        "400":
          description: Bad request - missing required fields
        "404":
          description: Scenario not found
        "500":
          description: Internal server error

  /api/scenario/delete:
    delete:
      summary: Delete a test scenario
      tags: [Scenario]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: scenario_id
          in: query
          required: true
          type: string
          description: Scenario ID
      operationId: controllers.scenario.delete_scenario
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        "400":
          description: Bad request - missing required fields
        "404":
          description: Scenario not found
        "500":
          description: Internal server error

  /api/workflow/create:
    post:
      summary: Create a workflow
      tags: [Workflow]
      operationId: controllers.workflow.create_workflow
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [project_id, api_key]
            properties:
              project_id:
                type: string
              api_key:
                type: string
      responses:
        "200":
          description: Workflow created
        "400":
          description: Missing required fields
        "500":
          description: Internal server error

  /api/workflow/get:
    get:
      summary: Get workflow details
      tags: [Workflow]
      operationId: controllers.workflow.get_workflow
      parameters:
        - name: workflow_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
        "400":
          description: Missing workflow_id
        "404":
          description: Workflow not found
        "500":
          description: Internal server error

  /api/workflow/update:
    put:
      summary: Update workflow
      tags: [Workflow]
      operationId: controllers.workflow.update_workflow
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [workflow_id, update_data]
            properties:
              workflow_id:
                type: string
              update_data:
                type: object
      responses:
        "200":
          description: Workflow updated
        "400":
          description: Missing workflow_id
        "500":
          description: Internal server error

  /api/workflow/delete:
    delete:
      summary: Delete workflow
      tags: [Workflow]
      operationId: controllers.workflow.delete_workflow
      parameters:
        - name: workflow_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Workflow deleted
        "400":
          description: Missing workflow_id
        "500":
          description: Internal server error

  /api/workflow/list:
    get:
      summary: List workflows for a project
      tags: [Workflow]
      operationId: controllers.workflow.list_workflows
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
        "500":
          description: Internal server error

  /api/workflow/execution_history:
    get:
      summary: Get execution history for a workflow
      tags: [Workflow]
      operationId: controllers.workflow.get_execution_history
      parameters:
        - name: workflow_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
        "500":
          description: Internal server error

  /api/workflow/execution:
    get:
      summary: Get execution details
      tags: [Workflow]
      operationId: controllers.workflow.get_execution
      parameters:
        - name: execution_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
        "400":
          description: Missing execution_id
        "404":
          description: Execution not found
        "500":
          description: Internal server error

  /api/workflow/execution_detail:
    get:
      summary: Get workflow execution detail
      tags: [Workflow]
      operationId: controllers.workflow.get_workflow_execution_detail
      parameters:
        - name: id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: Execution not found
        "500":
          description: Internal server error

  /api/workflow/executions_by_project:
    get:
      summary: List workflow executions by project
      tags: [Workflow]
      operationId: controllers.workflow.list_workflow_executions_by_project
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
        "500":
          description: Internal server error

  /api/bug/create:
    post:
      summary: Create a new bug
      tags: [Bug]
      operationId: controllers.bug.create_bug
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [project_id, summary, description, severity]
            properties:
              project_id:
                type: string
              task_id:
                type: string
              scenario_id:
                type: string
              summary:
                type: string
              description:
                type: string
              severity:
                type: string
              status:
                type: string
                default: open
              created_by:
                type: string
                default: system
              environment:
                type: object
      responses:
        "200":
          description: Bug created successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: "#/definitions/Bug"
        "400":
          description: Bad request - missing required fields
        "500":
          description: Internal server error

  /api/bug/list:
    get:
      summary: Get all bugs for a project
      tags: [Bug]
      operationId: controllers.bug.get_bugs
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
        - name: status
          in: query
          type: string
        - name: severity
          in: query
          type: string
        - name: task_id
          in: query
          type: string
        - name: scenario_id
          in: query
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Bug"
        "400":
          description: Bad request - missing project_id
        "500":
          description: Internal server error

  /api/bug/get:
    get:
      summary: Get bug details
      tags: [Bug]
      operationId: controllers.bug.get_bug
      parameters:
        - name: bug_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: "#/definitions/Bug"
        "400":
          description: Bad request - missing bug_id
        "404":
          description: Bug not found
        "500":
          description: Internal server error

  /api/bug/update:
    put:
      summary: Update bug information
      tags: [Bug]
      operationId: controllers.bug.update_bug
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [bug_id]
            properties:
              bug_id:
                type: string
              summary:
                type: string
              description:
                type: string
              status:
                type: string
              severity:
                type: string
      responses:
        "200":
          description: Bug updated successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: "#/definitions/Bug"
        "400":
          description: Bad request - missing bug_id
        "404":
          description: Bug not found
        "500":
          description: Internal server error

  /api/bug/delete:
    delete:
      summary: Delete a bug
      tags: [Bug]
      operationId: controllers.bug.delete_bug
      parameters:
        - name: bug_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Bug deleted successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        "400":
          description: Bad request - missing bug_id
        "404":
          description: Bug not found
        "500":
          description: Internal server error

  /api/bug/fix/create:
    post:
      summary: Create a bug fix record
      tags: [Bug]
      operationId: controllers.bug.create_bug_fix
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [bug_id, fix_description, fixed_by]
            properties:
              bug_id:
                type: string
              fix_description:
                type: string
              fixed_by:
                type: string
              fix_status:
                type: string
                default: pending
      responses:
        "200":
          description: Bug fix created successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: "#/definitions/BugFix"
        "400":
          description: Bad request - missing required fields
        "500":
          description: Internal server error

  /api/bug/fix/verify:
    post:
      summary: Verify a bug fix
      tags: [Bug]
      operationId: controllers.bug.verify_bug_fix
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [fix_id, verified_by]
            properties:
              fix_id:
                type: string
              verified_by:
                type: string
              fix_status:
                type: string
                default: verified
      responses:
        "200":
          description: Bug fix verified successfully
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: "#/definitions/BugFix"
        "400":
          description: Bad request - missing required fields
        "404":
          description: Bug fix not found
        "500":
          description: Internal server error

  /api/bug/fix/list:
    get:
      summary: Get all fixes for a bug
      tags: [Bug]
      operationId: controllers.bug.get_bug_fixes
      parameters:
        - name: bug_id
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/BugFix"
        "400":
          description: Bad request - missing bug_id
        "500":
          description: Internal server error

  /api/workflow/upload_document:
    post:
      summary: Upload document to workflow
      tags: [Workflow]
      operationId: controllers.workflow.upload_document_to_workflow
      consumes:
        - multipart/form-data
      parameters:
        - name: workflow_id
          in: formData
          required: true
          type: string
        - name: file
          in: formData
          required: true
          type: file
      responses:
        "200":
          description: Document uploaded
        "400":
          description: Missing workflow_id or file
        "500":
          description: Internal server error

  /api/workflow/run:
    post:
      summary: Run Dify workflow
      tags: [Workflow]
      operationId: controllers.workflow.run_dify_workflow_controller
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [project_id, workflow_id, inputs]
            properties:
              project_id:
                type: string
              workflow_id:
                type: string
              inputs:
                type: object
              user:
                type: string
              response_mode:
                type: string
      responses:
        "200":
          description: Dify workflow run successful
        "400":
          description: Missing required fields
        "500":
          description: Internal server error

  /api/workflow/sync_workflow:
    get:
      summary: Sync workflow status from Dify
      tags: [Workflow]
      operationId: controllers.workflow.sync_workflow
      parameters:
        - name: workflow_id
          in: query
          required: true
          type: string
          description: Workflow ID
      responses:
        "200":
          description: Sync completed
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: object
                properties:
                  updated:
                    type: boolean
        "400":
          description: Missing workflow_id
        "404":
          description: Workflow not found
        "500":
          description: Internal server error

  /api/document/list_by_workflow:
    get:
      summary: List all documents for a given workflow_id
      tags: [Document]
      operationId: controllers.document.get_documents_by_workflow
      parameters:
        - name: workflow_id
          in: query
          required: true
          type: string
          description: Workflow ID
      responses:
        "200":
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Document"
        "400":
          description: Bad request - missing workflow_id
        "500":
          description: Internal server error


definitions:
  Project:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      owner:
        type: string
      status:
        type: string

  ProjectDetail:
    type: object
    properties:
      project:
        $ref: "#/definitions/Project"
      scenarios:
        type: array
        items:
          $ref: "#/definitions/Scenario"

  Document:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      url:
        type: string

  Scenario:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      priority:
        type: string
      version:
        type: string

  Workflow:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      project_id:
        type: string

  WorkflowExecution:
    type: object
    properties:
      id:
        type: string
      project_id:
        type: string
      workflow_id:
        type: string
      status:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time

  Bug:
    type: object
    properties:
      id:
        type: string
      project_id:
        type: string
      task_id:
        type: string
      scenario_id:
        type: string
      summary:
        type: string
      description:
        type: string
      severity:
        type: string
      status:
        type: string
      created_by:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      environment:
        type: object

  BugFix:
    type: object
    properties:
      id:
        type: string
      bug_id:
        type: string
      fix_description:
        type: string
      fixed_by:
        type: string
      fix_status:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
