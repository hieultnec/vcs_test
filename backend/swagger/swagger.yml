swagger: '2.0'
info:
  title: Auto Test Case API
  version: '1.0'
  description: API for managing test projects, scenarios, test cases, and test runs
tags:
  - name: Project
    description: Project management endpoints
  - name: Document
    description: Document management endpoints
  - name: Task
    description: Task management endpoints
  - name: Scenario
    description: Test scenario management endpoints
  - name: TestCase
    description: Test case management endpoints
  - name: TestRun
    description: Test run history management endpoints
  - name: Workflow
    description: Workflow management endpoints

paths:
  /api/ping:
    get:
      summary: Health check endpoint
      tags: [Project]
      operationId: controllers.ping.ping
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string

  /api/projects:
    get:
      summary: Get all projects
      tags: [Project]
      produces:
        - application/json
      operationId: controllers.project.list
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/Project'

  /api/project/create:
    post:
      summary: Create a new project with document upload
      tags: [Project]
      consumes:
        - multipart/form-data
        - application/json
      parameters:
        - name: name
          in: formData
          required: true
          type: string
          description: Project name
        - name: description
          in: formData
          required: false
          type: string
          description: Project description
        - name: owner
          in: formData
          required: false
          type: string
          description: Project owner
        - name: is_current
          in: formData
          required: false
          type: boolean
          description: Mark the first uploaded document as current
        - name: file
          in: formData
          required: false
          type: file
          description: Project document(s) (optional, upload after project creation)
          collectionFormat: multi
      operationId: controllers.project.create
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/Project'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/project/get:
    get:
      summary: Get project by ID (includes test scenarios and tasks)
      tags: [Project]
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          required: true
          type: string
          description: The ID of the project to retrieve
      operationId: controllers.project.get
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/ProjectDetail'
        '400':
          description: Bad request - missing project ID
        '404':
          description: Project not found
        '500':
          description: Internal server error

  /api/project/update:
    put:
      summary: Update project information by ID
      tags: [Project]
      consumes:
        - application/json
      parameters:
        - name: id
          in: query
          required: true
          type: string
          description: The ID of the project to update
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              owner:
                type: string
              status:
                type: string
      operationId: controllers.project.update
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/Project'
        '400':
          description: Bad request - missing project ID or request body
        '404':
          description: Project not found
        '500':
          description: Internal server error

  /api/project/delete:
    delete:
      summary: Delete project by ID
      tags: [Project]
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          required: true
          type: string
          description: The ID of the project to delete
      operationId: controllers.project.delete
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - missing project ID
        '404':
          description: Project not found
        '500':
          description: Internal server error

  /api/project/document/upload:
    post:
      summary: Upload document for a project (uploads to Dify and stores locally)
      tags: [Document]
      consumes:
        - multipart/form-data
      parameters:
        - name: project_id
          in: formData
          required: true
          type: string
          description: Project ID
        - name: file
          in: formData
          required: true
          type: file
          description: Document file to upload
        - name: is_current
          in: formData
          required: false
          type: boolean
          description: Mark document as current
        - name: user
          in: formData
          required: false
          type: string
          description: User identifier for Dify upload
      operationId: controllers.document.upload_document
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/Document'
        '400':
          description: Bad request - missing file or project_id, or Dify API URL not configured
        '500':
          description: Internal server error or Dify upload failed

  /api/project/document/list:
    get:
      summary: List documents for a project
      tags: [Document]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
      operationId: controllers.document.get_documents
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/Document'
        '400':
          description: Bad request - missing project_id
        '500':
          description: Internal server error

  /api/project/document/delete:
    delete:
      summary: Delete document by ID
      tags: [Document]
      produces:
        - application/json
      parameters:
        - name: document_id
          in: query
          required: true
          type: string
          description: Document ID to delete
      operationId: controllers.document.delete_document
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing document_id
        '404':
          description: Document not found
        '500':
          description: Internal server error

  /api/project/document/list_by_project:
    get:
      summary: List all documents for a project
      tags: [Document]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
      operationId: controllers.document.get_documents_by_project
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/Document'
        '400':
          description: Bad request - missing project_id
        '500':
          description: Internal server error

  /api/project/document/detail:
    get:
      summary: Get document details by ID
      tags: [Document]
      produces:
        - application/json
      parameters:
        - name: document_id
          in: query
          required: true
          type: string
          description: Document ID
      operationId: controllers.document.get_document_detail
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/Document'
        '400':
          description: Bad request - missing document_id
        '404':
          description: Document not found
        '500':
          description: Internal server error

  /api/project/document/download:
    get:
      summary: Download a document by ID
      tags: [Document]
      produces:
        - application/octet-stream
      parameters:
        - name: document_id
          in: query
          required: true
          type: string
          description: Document ID to download
      operationId: controllers.document.download_document
      responses:
        '200':
          description: Successful operation
          schema:
            type: file
        '400':
          description: Bad request - missing document_id
        '404':
          description: Document not found
        '500':
          description: Internal server error

  /api/task/create:
    post:
      summary: Create a new task
      tags: [Task]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - task_name
              - url
              - context
            properties:
              project_id:
                type: string
                description: Project ID
              task_name:
                type: string
                description: Task name
              url:
                type: string
                description: Target URL for the task
              context:
                type: string
                description: Task context/description
      operationId: controllers.task.create
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/Task'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/task/get:
    get:
      summary: Get tasks for a project
      tags: [Task]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
      operationId: controllers.task.get
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/Task'
        '400':
          description: Bad request - missing project_id
        '500':
          description: Internal server error

  /api/task/update:
    put:
      summary: Update a task
      tags: [Task]
      consumes:
        - application/json
      parameters:
        - name: id
          in: query
          required: true
          type: string
          description: Task ID
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              task_name:
                type: string
              url:
                type: string
              context:
                type: string
              status:
                type: string
      operationId: controllers.task.update
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/Task'
        '400':
          description: Bad request - missing task ID or request body
        '404':
          description: Task not found
        '500':
          description: Internal server error

  /api/task/delete:
    delete:
      summary: Delete a task
      tags: [Task]
      produces:
        - application/json
      parameters:
        - name: task_id
          in: query
          required: true
          type: string
          description: Task ID
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
      operationId: controllers.task.delete
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request - missing task_id or project_id
        '404':
          description: Task not found
        '500':
          description: Internal server error

  /api/task/execute:
    post:
      summary: Execute a task
      tags: [Task]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - task_id
            properties:
              project_id:
                type: string
                description: Project ID
              task_id:
                type: string
                description: Task ID to execute
      operationId: controllers.task.ex_task
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: object
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/task/screenshots:
    get:
      summary: Get list of screenshots for a task
      tags: [Task]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: task_id
          in: query
          required: true
          type: string
          description: Task ID
      operationId: controllers.task.get_screenshots
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  type: string
        '400':
          description: Bad request - missing project_id or task_id
        '500':
          description: Internal server error

  /api/task/screenshot:
    get:
      summary: Get a specific screenshot file
      tags: [Task]
      produces:
        - image/png
      parameters:
        - name: path
          in: query
          required: true
          type: string
          description: Path to screenshot file
      operationId: controllers.task.get_screenshot
      responses:
        '200':
          description: Successful operation
          schema:
            type: file
        '400':
          description: Bad request - missing path
        '404':
          description: Screenshot not found
        '500':
          description: Internal server error

  /api/scenario/save:
    post:
      summary: Save test scenarios for a project
      tags: [Scenario]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenarios
            properties:
              project_id:
                type: string
                description: Project ID
              scenarios:
                type: array
                items:
                  $ref: '#/definitions/Scenario'
      operationId: controllers.scenario.save_scenarios
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/scenario/save_from_workflow:
    post:
      summary: Save test scenarios from workflow output
      tags: [Scenario]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - workflow_output
            properties:
              project_id:
                type: string
                description: Project ID
              workflow_output:
                type: object
                description: Raw workflow output that will be transformed to match the new data structure
      operationId: controllers.scenario.save_scenarios_from_workflow
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/scenario/create:
    post:
      summary: Create a new test scenario
      tags: [Scenario]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenario_data
            properties:
              project_id:
                type: string
                description: Project ID
              scenario_data:
                type: object
                required:
                  - name
                  - description
                  - priority
                properties:
                  name:
                    type: string
                    description: Scenario name
                  description:
                    type: string
                    description: Scenario description
                  priority:
                    type: string
                    enum: [High, Medium, Low]
                    description: Scenario priority level
                  version:
                    type: string
                    description: Scenario version (optional, defaults to '1.0')
      operationId: controllers.scenario.create_scenario
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/Scenario'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/scenario/list:
    get:
      summary: Get test scenarios for a project
      tags: [Scenario]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
      operationId: controllers.scenario.get_scenarios
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/Scenario'
        '400':
          description: Bad request - missing project_id
        '500':
          description: Internal server error

  /api/scenario/update:
    put:
      summary: Update a test scenario
      tags: [Scenario]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenario_id
              - scenario_data
            properties:
              project_id:
                type: string
                description: Project ID
              scenario_id:
                type: string
                description: Scenario ID
              scenario_data:
                $ref: '#/definitions/Scenario'
      operationId: controllers.scenario.update_scenario
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing required fields
        '404':
          description: Scenario not found
        '500':
          description: Internal server error

  /api/scenario/delete:
    delete:
      summary: Delete a test scenario
      tags: [Scenario]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: scenario_id
          in: query
          required: true
          type: string
          description: Scenario ID
      operationId: controllers.scenario.delete_scenario
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing required fields
        '404':
          description: Scenario not found
        '500':
          description: Internal server error

  /api/scenario/get:
    get:
      summary: Get a specific test scenario
      tags: [Scenario]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: scenario_id
          in: query
          required: true
          type: string
          description: Scenario ID
      operationId: controllers.scenario.get_scenario
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/Scenario'
        '400':
          description: Bad request - missing required fields
        '404':
          description: Scenario not found
        '500':
          description: Internal server error

  /api/test_case/save:
    post:
      summary: Save test cases for a scenario
      tags: [TestCase]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenario_id
              - test_cases
            properties:
              project_id:
                type: string
                description: Project ID
              scenario_id:
                type: string
                description: Scenario ID
              test_cases:
                type: array
                items:
                  $ref: '#/definitions/TestCase'
      operationId: controllers.test_case.save_test_cases
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/test_case/list:
    get:
      summary: Get test cases for a scenario
      tags: [TestCase]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: scenario_id
          in: query
          required: true
          type: string
          description: Scenario ID
      operationId: controllers.test_case.get_test_cases
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/TestCase'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/test_case/create:
    post:
      summary: Create a new test case
      tags: [TestCase]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenario_id
              - test_case_data
            properties:
              project_id:
                type: string
                description: Project ID
              scenario_id:
                type: string
                description: Scenario ID
              test_case_data:
                $ref: '#/definitions/TestCase'
      operationId: controllers.test_case.create_test_case
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/TestCase'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/test_case/update:
    put:
      summary: Update a test case
      tags: [TestCase]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - project_id
              - scenario_id
              - test_case_id
              - update_data
            properties:
              project_id:
                type: string
                description: Project ID
              scenario_id:
                type: string
                description: Scenario ID
              test_case_id:
                type: string
                description: Test case ID
              update_data:
                $ref: '#/definitions/TestCase'
      operationId: controllers.test_case.update_test_case
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing required fields
        '404':
          description: Test case not found
        '500':
          description: Internal server error

  /api/test_case/delete:
    delete:
      summary: Delete a test case
      tags: [TestCase]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: scenario_id
          in: query
          required: true
          type: string
          description: Scenario ID
        - name: test_case_id
          in: query
          required: true
          type: string
          description: Test case ID
      operationId: controllers.test_case.delete_test_case
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing required fields
        '404':
          description: Test case not found
        '500':
          description: Internal server error

  /api/test_case/get:
    get:
      summary: Get a specific test case
      tags: [TestCase]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: scenario_id
          in: query
          required: true
          type: string
          description: Scenario ID
        - name: test_case_id
          in: query
          required: true
          type: string
          description: Test case ID
      operationId: controllers.test_case.get_test_case
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/TestCase'
        '400':
          description: Bad request - missing required fields
        '404':
          description: Test case not found
        '500':
          description: Internal server error

  /api/test_run/record:
    post:
      summary: Record a new test run
      tags: [TestRun]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestRun'
      operationId: controllers.test_run.record_test_run
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/TestRun'
        '400':
          description: Bad request - missing request body
        '500':
          description: Internal server error

  /api/test_run/list_by_case:
    get:
      summary: Get all test runs for a specific test case
      tags: [TestRun]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: test_case_id
          in: query
          required: true
          type: string
          description: Test case ID
      operationId: controllers.test_run.get_test_runs_by_case
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/TestRun'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/test_run/latest:
    get:
      summary: Get the latest test run for a test case
      tags: [TestRun]
      produces:
        - application/json
      parameters:
        - name: test_case_id
          in: query
          required: true
          type: string
          description: The ID of the test case
      operationId: controllers.test_run.get_latest_test_run
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/TestRun'
        '400':
          description: Bad request - missing test case ID
        '404':
          description: Test run not found
        '500':
          description: Internal server error

  /api/test_run/get:
    get:
      summary: Get a specific test run by run_id
      tags: [TestRun]
      produces:
        - application/json
      parameters:
        - name: run_id
          in: query
          required: true
          type: string
          description: Test run ID
      operationId: controllers.test_run.get_test_run
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/TestRun'
        '400':
          description: Bad request - missing run_id
        '404':
          description: Test run not found
        '500':
          description: Internal server error

  /api/test_run/update:
    put:
      summary: Update a specific test run
      tags: [TestRun]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - run_id
              - update_data
            properties:
              run_id:
                type: string
                description: Test run ID
              update_data:
                $ref: '#/definitions/TestRun'
      operationId: controllers.test_run.update_test_run
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing required fields
        '404':
          description: Test run not found
        '500':
          description: Internal server error

  /api/test_run/delete:
    delete:
      summary: Delete a specific test run
      tags: [TestRun]
      produces:
        - application/json
      parameters:
        - name: run_id
          in: query
          required: true
          type: string
          description: Test run ID
      operationId: controllers.test_run.delete_test_run
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing run_id
        '404':
          description: Test run not found
        '500':
          description: Internal server error

  /api/test_run/list_by_scenario:
    get:
      summary: Get all test runs for a specific scenario
      tags: [TestRun]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: scenario_id
          in: query
          required: true
          type: string
          description: Scenario ID
      operationId: controllers.test_run.get_test_runs_by_scenario
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/TestRun'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/test_run/list_by_project:
    get:
      summary: Get recent test runs for a project
      tags: [TestRun]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: Project ID
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
          description: Maximum number of test runs to return
      operationId: controllers.test_run.get_test_runs_by_project
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/TestRun'
        '400':
          description: Bad request - missing project_id
        '500':
          description: Internal server error

  /api/workflow/config:
    get:
      summary: Get workflow configuration for a project
      tags: [Workflow]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: The ID of the project
      operationId: controllers.workflow.get_workflow_config
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/WorkflowConfig'
        '400':
          description: Bad request - missing project ID
        '500':
          description: Internal server error
    post:
      summary: Save workflow configuration for a project
      tags: [Workflow]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/WorkflowConfig'
      operationId: controllers.workflow.save_workflow_config
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/WorkflowConfig'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/workflow/execute:
    post:
      summary: Execute a workflow with given variables
      tags: [Workflow]
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              project_id:
                type: string
                description: The ID of the project
              variables:
                type: array
                items:
                  $ref: '#/definitions/WorkflowVariable'
      operationId: controllers.workflow.execute_workflow
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/WorkflowExecution'
        '400':
          description: Bad request - missing required fields
        '500':
          description: Internal server error

  /api/workflow/execution:
    get:
      summary: Get workflow execution status
      tags: [Workflow]
      produces:
        - application/json
      parameters:
        - name: execution_id
          in: query
          required: true
          type: string
          description: The ID of the execution
      operationId: controllers.workflow.get_execution_status
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                $ref: '#/definitions/WorkflowExecution'
        '400':
          description: Bad request - missing execution ID
        '404':
          description: Execution not found
        '500':
          description: Internal server error

  /api/workflow/executions:
    get:
      summary: Get workflow execution history for a project
      tags: [Workflow]
      produces:
        - application/json
      parameters:
        - name: project_id
          in: query
          required: true
          type: string
          description: The ID of the project
      operationId: controllers.workflow.get_execution_history
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/WorkflowExecution'
        '400':
          description: Bad request - missing project ID
        '500':
          description: Internal server error

  /api/workflow/execution/cancel:
    post:
      summary: Cancel a workflow execution
      tags: [Workflow]
      produces:
        - application/json
      parameters:
        - name: execution_id
          in: query
          required: true
          type: string
          description: The ID of the execution to cancel
      operationId: controllers.workflow.cancel_execution
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
        '400':
          description: Bad request - missing execution ID
        '404':
          description: Execution not found
        '500':
          description: Internal server error

  /api/workflow/templates:
    get:
      summary: Get available workflow templates
      tags: [Workflow]
      produces:
        - application/json
      operationId: controllers.workflow.get_templates
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: integer
              message:
                type: string
              result:
                type: array
                items:
                  $ref: '#/definitions/WorkflowTemplate'
        '500':
          description: Internal server error

definitions:
  Project:
    type: object
    properties:
      project_id:
        type: string
        description: Unique project identifier
      id:
        type: string
        description: Project ID (for frontend compatibility)
      name:
        type: string
        description: Project name
      description:
        type: string
        description: Project description
      version:
        type: string
        description: Project version
      owner:
        type: string
        description: Project owner
      status:
        type: string
        description: Project status
      created_at:
        type: string
        format: date-time
        description: Creation timestamp
      lastUpdated:
        type: string
        format: date-time
        description: Last update timestamp
      uploaded_documents:
        type: array
        items:
          $ref: '#/definitions/Document'
        description: List of uploaded documents

  ProjectDetail:
    type: object
    properties:
      project_id:
        type: string
        description: Unique project identifier
      id:
        type: string
        description: Project ID (for frontend compatibility)
      name:
        type: string
        description: Project name
      description:
        type: string
        description: Project description
      version:
        type: string
        description: Project version
      owner:
        type: string
        description: Project owner
      status:
        type: string
        description: Project status
      created_at:
        type: string
        format: date-time
        description: Creation timestamp
      lastUpdated:
        type: string
        format: date-time
        description: Last update timestamp
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
        description: List of tasks for the project
      test_scenarios:
        type: array
        items:
          $ref: '#/definitions/Scenario'
        description: List of test scenarios for the project

  Document:
    type: object
    properties:
      document_id:
        type: string
        description: Unique document identifier
      project_id:
        type: string
        description: Project ID
      filename:
        type: string
        description: Original filename
      filepath:
        type: string
        description: File path on server
      dify_document_id:
        type: string
        description: Dify document ID for external processing
      is_current:
        type: boolean
        description: Whether this is the current document
      uploaded_at:
        type: string
        format: date-time
        description: Upload timestamp
      metadata:
        type: object
        description: Additional document metadata

  Task:
    type: object
    properties:
      task_id:
        type: string
        description: Unique task identifier
      project_id:
        type: string
        description: Project ID
      task_name:
        type: string
        description: Task name
      url:
        type: string
        description: Target URL for the task
      context:
        type: string
        description: Task context/description
      status:
        type: string
        description: Task status
      created_at:
        type: string
        format: date-time
        description: Creation timestamp
      updated_at:
        type: string
        format: date-time
        description: Last update timestamp

  Scenario:
    type: object
    properties:
      id:
        type: string
        description: Unique scenario identifier
      project_id:
        type: string
        description: Project ID
      name:
        type: string
        description: Scenario name
      description:
        type: string
        description: Scenario description
      priority:
        type: string
        enum: [High, Medium, Low]
        description: Scenario priority level
      version:
        type: string
        description: Scenario version
      test_cases:
        type: array
        items:
          $ref: '#/definitions/TestCase'
        description: List of test cases for this scenario
      created_at:
        type: string
        format: date-time
        description: Creation timestamp
      updated_at:
        type: string
        format: date-time
        description: Last update timestamp

  TestCase:
    type: object
    properties:
      id:
        type: string
        description: Unique test case identifier
      project_id:
        type: string
        description: Project ID
      scenario_id:
        type: string
        description: Scenario ID
      title:
        type: string
        description: Test case title
      description:
        type: string
        description: Test case description
      steps:
        type: array
        items:
          type: string
        description: List of test steps
      expected_result:
        type: string
        description: Expected test result
      status:
        type: string
        enum: [untested, passed, failed]
        description: Test case status
      version:
        type: string
        description: Test case version
      created_at:
        type: string
        format: date-time
        description: Creation timestamp
      updated_at:
        type: string
        format: date-time
        description: Last update timestamp

  TestRun:
    type: object
    properties:
      run_id:
        type: string
        description: Unique test run identifier
      project_id:
        type: string
        description: Project ID
      test_case_id:
        type: string
        description: Test case ID
      scenario_id:
        type: string
        description: Scenario ID
      status:
        type: string
        enum: [pending, running, passed, failed, error]
        description: Test run status
      result:
        type: object
        description: Test run result details
      started_at:
        type: string
        format: date-time
        description: Test start timestamp
      completed_at:
        type: string
        format: date-time
        description: Test completion timestamp
      duration:
        type: number
        description: Test duration in seconds
      error_message:
        type: string
        description: Error message if test failed
      screenshots:
        type: array
        items:
          type: string
        description: List of screenshot paths

  WorkflowConfig:
    type: object
    properties:
      project_id:
        type: string
        description: Project ID
      variables:
        type: array
        items:
          $ref: '#/definitions/WorkflowVariable'
        description: List of workflow variables
      created_at:
        type: string
        format: date-time
        description: Creation timestamp
      updated_at:
        type: string
        format: date-time
        description: Last update timestamp

  WorkflowVariable:
    type: object
    properties:
      id:
        type: string
        description: Unique variable identifier
      variable_name:
        type: string
        description: Variable name
      key:
        type: string
        description: Variable key
      value:
        type: string
        description: Variable value
      type:
        type: string
        enum: [ssh_host, ssh_port, document, url, custom, secret]
        description: Variable type
      description:
        type: string
        description: Variable description

  WorkflowExecution:
    type: object
    properties:
      execution_id:
        type: string
        description: Unique workflow execution identifier
      project_id:
        type: string
        description: Project ID
      status:
        type: string
        enum: [pending, running, completed, failed, cancelled]
        description: Workflow execution status
      variables:
        type: array
        items:
          $ref: '#/definitions/WorkflowVariable'
        description: Variables used in the execution
      result:
        type: object
        description: Execution result data
      started_at:
        type: string
        format: date-time
        description: Workflow execution start timestamp
      completed_at:
        type: string
        format: date-time
        description: Workflow execution completion timestamp
      error_message:
        type: string
        description: Error message if workflow failed

  WorkflowTemplate:
    type: object
    properties:
      name:
        type: string
        description: Template name
      variables:
        type: array
        items:
          $ref: '#/definitions/WorkflowVariable'
        description: Template variables
